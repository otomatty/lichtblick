# 正式リリース作業を自動化するワークフロー
# 全プラットフォーム向けビルド、バージョンアップ、GitHub Release作成を一括実行
name: Release

on:
  workflow_dispatch: # 手動実行のみ（慎重なリリースプロセス）

jobs:
  build:
    runs-on: macos-latest # 全プラットフォーム対応のためmacOS環境を使用

    steps:
      # リポジトリのチェックアウト（書き込み権限付きトークン使用）
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.LICHTBLICK_GITHUB_TOKEN }}

      # Node.js 16.17 環境をセットアップ
      - name: Set up Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 16.17

      # Yarn パッケージマネージャーを有効化
      - name: Enable corepack
        run: corepack enable yarn

      # ルートpackage.jsonのminorバージョンアップ
      - name: Bump minor version and save it on environment variable
        run: |
          yarn version minor
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      # @lichtblick/suiteパッケージのバージョンアップ
      - name: Bump @lichtblick/suite version
        run: yarn version minor
        working-directory: packages/suite

      # 依存関係のインストール（厳密なロック）
      - name: Install dependencies
        run: yarn install --immutable

      # プロダクション向けビルド実行
      - name: Build prod files
        run: |
          yarn run desktop:build:prod
          yarn run web:build:prod

      # Windows版実行ファイルのビルド
      - name: Build windows version
        run: yarn run package:win

      # Linux版パッケージのビルド
      - name: Build linux version
        run: yarn run package:linux

      # macOS版DMGファイルのビルド
      - name: Build macOS version
        run: yarn run package:darwin

      # Web版静的ファイルのアーカイブ作成
      - name: Create web static files tarball
        run: tar -czf dist/lichtblick-web.tar.gz -C web/.webpack .

      # Important to use [skip actions] to avoid triggering other verisoning workflows
      # https://docs.github.com/en/actions/managing-workflow-runs-and-deployments/managing-workflow-runs/skipping-workflow-runs
      - name: Commit and tag the new version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json packages/suite/package.json yarn.lock
          git commit -m "Bump version v${{ env.new_version }} [skip actions]"
          git tag "v${{ env.new_version }}"
          git push origin main --tags

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ env.new_version }}"
          name: "v${{ env.new_version }}"
          commit: main
          generateReleaseNotes: true
          token: ${{ secrets.LICHTBLICK_GITHUB_TOKEN }}
          artifacts: |
            dist/lichtblick-${{ env.new_version }}-linux-amd64.deb
            dist/lichtblick-${{ env.new_version }}-linux-x64.tar.gz
            dist/lichtblick-${{ env.new_version }}-linux-arm64.deb
            dist/lichtblick-${{ env.new_version }}-linux-arm64.tar.gz
            dist/lichtblick-${{ env.new_version }}-mac-universal.dmg
            dist/lichtblick-${{ env.new_version }}-win.exe
            dist/lichtblick-web.tar.gz
            dist/latest-linux.yml
            dist/latest-mac.yml
            dist/latest.yml
